{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAElC,OAAO,aAAa,MAAM,iBAAiB,CAAC;AAC5C,OAAO,EAAE,kBAAkB,EAAE,MAAM,uBAAuB,CAAC;AAE3D,MAAM,gBAAgB,GAAG,yBAAyB,CAAC;AAEnD,MAAM,CAAC,KAAK,UAAU,gBAAgB;IACpC,IAAI,aAAa,CAAC,gBAAgB,EAAE;QAClC,OAAO,MAAM,aAAa,CAAC,gBAAgB,EAAE,CAAC;KAC/C;IACD,OAAO,KAAK,CAAC;AACf,CAAC;AAED,MAAM,UAAU,YAAY,CAAC,MAAc,gBAAgB;IACzD,SAAS,CAAC,GAAG,EAAE;QACb,iBAAiB,CAAC,GAAG,CAAC,CAAC;QACvB,OAAO,GAAG,EAAE;YACV,mBAAmB,CAAC,GAAG,CAAC,CAAC;QAC3B,CAAC,CAAC;IACJ,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;AACZ,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,iBAAiB,CAAC,MAAc,gBAAgB;IACpE,IAAI,CAAC,CAAC,MAAM,gBAAgB,EAAE,CAAC,EAAE;QAC/B,IAAI,OAAO,EAAE;YACX,OAAO,CAAC,IAAI,CACV,+FAA+F,CAChG,CAAC;SACH;QACD,OAAO;KACR;IACD,IAAI,aAAa,CAAC,QAAQ,EAAE;QAC1B,MAAM,aAAa,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;KACnC;AACH,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,mBAAmB,CAAC,MAAc,gBAAgB;IACtE,IAAI,CAAC,CAAC,MAAM,gBAAgB,EAAE,CAAC,EAAE;QAC/B,IAAI,OAAO,EAAE;YACX,OAAO,CAAC,IAAI,CACV,+FAA+F,CAChG,CAAC;SACH;QACD,OAAO;KACR;IACD,IAAI,aAAa,CAAC,UAAU,EAAE;QAC5B,MAAM,aAAa,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;KACrC;AACH,CAAC;AAED,MAAM,UAAU,gBAAgB,CAAC,GAAW,EAAE,QAAiD;IAC7F,IAAI,aAAa,CAAC,WAAW,EAAE;QAC7B,aAAa,CAAC,WAAW,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;KAC1C;AACH,CAAC;AAED,OAAO,EAAE,kBAAkB,EAAE,CAAC","sourcesContent":["import { useEffect } from 'react';\n\nimport ExpoKeepAwake from './ExpoKeepAwake';\nimport { KeepAwakeEventType } from './ExpoKeepAwake.types';\n\nconst ExpoKeepAwakeTag = 'ExpoKeepAwakeDefaultTag';\n\nexport async function isAvailableAsync(): Promise<boolean> {\n  if (ExpoKeepAwake.isAvailableAsync) {\n    return await ExpoKeepAwake.isAvailableAsync();\n  }\n  return false;\n}\n\nexport function useKeepAwake(tag: string = ExpoKeepAwakeTag): void {\n  useEffect(() => {\n    activateKeepAwake(tag);\n    return () => {\n      deactivateKeepAwake(tag);\n    };\n  }, [tag]);\n}\n\nexport async function activateKeepAwake(tag: string = ExpoKeepAwakeTag): Promise<void> {\n  if (!(await isAvailableAsync())) {\n    if (__DEV__) {\n      console.warn(\n        `KeepAwake.activateKeepAwake() was invoked on a device that doesn't support the KeepAwake API.`\n      );\n    }\n    return;\n  }\n  if (ExpoKeepAwake.activate) {\n    await ExpoKeepAwake.activate(tag);\n  }\n}\n\nexport async function deactivateKeepAwake(tag: string = ExpoKeepAwakeTag): Promise<void> {\n  if (!(await isAvailableAsync())) {\n    if (__DEV__) {\n      console.warn(\n        `KeepAwake.activateKeepAwake() was invoked on a device that doesn't support the KeepAwake API.`\n      );\n    }\n    return;\n  }\n  if (ExpoKeepAwake.deactivate) {\n    await ExpoKeepAwake.deactivate(tag);\n  }\n}\n\nexport function addEventListener(tag: string, listener: (eventType: KeepAwakeEventType) => void) {\n  if (ExpoKeepAwake.addListener) {\n    ExpoKeepAwake.addListener(tag, listener);\n  }\n}\n\nexport { KeepAwakeEventType };\n"]}